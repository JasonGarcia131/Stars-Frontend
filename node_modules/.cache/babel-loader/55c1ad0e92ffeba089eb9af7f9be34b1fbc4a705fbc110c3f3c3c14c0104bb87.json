{"ast":null,"code":"//This can be used for pagination with pages.\nexport const handlePaginate = (buttonId, api, page) => {\n  var _page$previous, _page$next;\n  switch (buttonId) {\n    case \"previous\":\n      api((_page$previous = page.previous) === null || _page$previous === void 0 ? void 0 : _page$previous.page);\n      break;\n    case \"next\":\n      api((_page$next = page.next) === null || _page$next === void 0 ? void 0 : _page$next.page);\n      break;\n  }\n};\n\n//Infinite scroll pagination function\nexport const handleInfiniteScroll = (api, page) => {\n  var _page$next2;\n  api((_page$next2 = page.next) === null || _page$next2 === void 0 ? void 0 : _page$next2.page);\n};","map":{"version":3,"names":["handlePaginate","buttonId","api","page","previous","next","handleInfiniteScroll"],"sources":["C:/Users/13233/Desktop/portfolio/stars-frontend/src/components/handlePaginate.js"],"sourcesContent":["\r\n//This can be used for pagination with pages.\r\nexport const handlePaginate = (buttonId, api, page) => {\r\n\r\n    switch(buttonId){\r\n        case \"previous\" :\r\n            api(page.previous?.page);\r\n            break;\r\n        case \"next\" : \r\n            api(page.next?.page);\r\n            break;\r\n    }\r\n}\r\n\r\n//Infinite scroll pagination function\r\nexport const handleInfiniteScroll = (api, page) => {\r\n    api(page.next?.page);\r\n}\r\n"],"mappings":"AACA;AACA,OAAO,MAAMA,cAAc,GAAG,CAACC,QAAQ,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAAA;EAEnD,QAAOF,QAAQ;IACX,KAAK,UAAU;MACXC,GAAG,mBAACC,IAAI,CAACC,QAAQ,mDAAb,eAAeD,IAAI,CAAC;MACxB;IACJ,KAAK,MAAM;MACPD,GAAG,eAACC,IAAI,CAACE,IAAI,+CAAT,WAAWF,IAAI,CAAC;MACpB;EAAM;AAElB,CAAC;;AAED;AACA,OAAO,MAAMG,oBAAoB,GAAG,CAACJ,GAAG,EAAEC,IAAI,KAAK;EAAA;EAC/CD,GAAG,gBAACC,IAAI,CAACE,IAAI,gDAAT,YAAWF,IAAI,CAAC;AACxB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}