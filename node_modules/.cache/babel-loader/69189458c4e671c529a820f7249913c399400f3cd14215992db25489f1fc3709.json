{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13233\\\\Desktop\\\\portfolio\\\\stars-frontend\\\\src\\\\components\\\\Select.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Select(props) {\n  const {\n    value,\n    setHoroscopeSign\n  } = props;\n  const horoscopeSigns = [\"aries\", \"taurus\", \"gemini\", \"cancer\", \"leo\", \"virgo\", \"libra\", \"scorpio\", \"sagittarius\", \"capricorn\", \"aquarius\", \"pisces\"];\n\n  //maps through the array and sets the option value equal to the element of the index.\n  const mappedOptions = horoscopeSigns.map((sign, i) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: sign,\n      children: sign.toUpperCase()\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  });\n\n  //sets the options.\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    id: \"selectHoroscope\",\n    value: value,\n    onChange: e => setHoroscopeSign(e.target.value),\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"Choose your sign\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), mappedOptions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_c = Select;\nexport default Select;\nvar _c;\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"names":["Select","props","value","setHoroscopeSign","horoscopeSigns","mappedOptions","map","sign","i","toUpperCase","e","target"],"sources":["C:/Users/13233/Desktop/portfolio/stars-frontend/src/components/Select.js"],"sourcesContent":["function Select(props) {\r\n\r\n    const {value, setHoroscopeSign} = props;\r\n    \r\n    const horoscopeSigns = [\"aries\", \"taurus\", \"gemini\", \"cancer\", \"leo\", \"virgo\", \"libra\", \"scorpio\", \"sagittarius\", \"capricorn\", \"aquarius\", \"pisces\"]\r\n\r\n    //maps through the array and sets the option value equal to the element of the index.\r\n    const mappedOptions = horoscopeSigns.map((sign,i) => {\r\n        return <option value={sign} key={i}>\r\n            {sign.toUpperCase()}\r\n        </option>\r\n    })\r\n\r\n    //sets the options.\r\n    return (\r\n        <select id=\"selectHoroscope\" value={value} onChange={(e) => setHoroscopeSign(e.target.value)}>\r\n            <option>Choose your sign</option>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default Select"],"mappings":";;AAAA,SAASA,MAAM,CAACC,KAAK,EAAE;EAEnB,MAAM;IAACC,KAAK;IAAEC;EAAgB,CAAC,GAAGF,KAAK;EAEvC,MAAMG,cAAc,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,aAAa,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,CAAC;;EAEpJ;EACA,MAAMC,aAAa,GAAGD,cAAc,CAACE,GAAG,CAAC,CAACC,IAAI,EAACC,CAAC,KAAK;IACjD,oBAAO;MAAQ,KAAK,EAAED,IAAK;MAAA,UACtBA,IAAI,CAACE,WAAW;IAAE,GADUD,CAAC;MAAA;MAAA;MAAA;IAAA,QAEzB;EACb,CAAC,CAAC;;EAEF;EACA,oBACI;IAAQ,EAAE,EAAC,iBAAiB;IAAC,KAAK,EAAEN,KAAM;IAAC,QAAQ,EAAGQ,CAAC,IAAKP,gBAAgB,CAACO,CAAC,CAACC,MAAM,CAACT,KAAK,CAAE;IAAA,wBACzF;MAAA,UAAQ;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAS,EAChCG,aAAa;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAEjB;AAAC,KApBQL,MAAM;AAsBf,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}